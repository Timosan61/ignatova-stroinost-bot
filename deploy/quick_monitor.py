#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Railway –¥–µ–ø–ª–æ—è —á–µ—Ä–µ–∑ CLI –∫–æ–º–∞–Ω–¥—ã
"""

import subprocess
import sys
import os
import time

def run_railway_command(command):
    """–ó–∞–ø—É—Å–∫ Railway CLI –∫–æ–º–∞–Ω–¥—ã"""
    try:
        result = subprocess.run(
            f"railway {command}",
            shell=True,
            capture_output=True,
            text=True,
            timeout=30
        )
        return result.stdout, result.stderr, result.returncode
    except subprocess.TimeoutExpired:
        return "", "Timeout", 1
    except Exception as e:
        return "", str(e), 1

def check_railway_cli():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Railway CLI"""
    stdout, stderr, code = run_railway_command("--version")
    if code == 0:
        print(f"‚úÖ Railway CLI –Ω–∞–π–¥–µ–Ω: {stdout.strip()}")
        return True
    else:
        print("‚ùå Railway CLI –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("üì• –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: npm install -g @railway/cli")
        print("üîó –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://docs.railway.app/develop/cli")
        return False

def login_railway():
    """–í—Ö–æ–¥ –≤ Railway CLI"""
    print("üîê –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ –≤ Railway...")
    stdout, stderr, code = run_railway_command("login")
    if code == 0:
        print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ Railway")
        return True
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –≤ Railway")
        print(f"–û—à–∏–±–∫–∞: {stderr}")
        return False

def get_project_status():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–µ–∫—Ç–∞"""
    print("üìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–µ–∫—Ç–∞...")
    stdout, stderr, code = run_railway_command("status")
    if code == 0:
        print("‚úÖ –°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞:")
        print(stdout)
        return True
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞")
        print(f"–û—à–∏–±–∫–∞: {stderr}")
        return False

def get_deployment_logs(service_name=None):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–≥–æ–≤ –¥–µ–ø–ª–æ—è"""
    cmd = "logs"
    if service_name:
        cmd += f" --service {service_name}"
    
    print(f"üìú –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–≥–æ–≤{' —Å–µ—Ä–≤–∏—Å–∞ ' + service_name if service_name else ''}...")
    stdout, stderr, code = run_railway_command(cmd)
    if code == 0:
        print("üìã –õ–æ–≥–∏:")
        print(stdout)
        return True
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤")
        print(f"–û—à–∏–±–∫–∞: {stderr}")
        return False

def monitor_with_cli():
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —á–µ—Ä–µ–∑ Railway CLI"""
    print("üöÄ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Railway –ø—Ä–æ–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ CLI")
    print("=" * 60)
    
    if not check_railway_cli():
        return False
    
    # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–µ–∑ –ª–æ–≥–∏–Ω–∞ (–µ—Å–ª–∏ —É–∂–µ –∑–∞–ª–æ–≥–∏–Ω–µ–Ω)
    if get_project_status():
        print("\n" + "="*40)
        get_deployment_logs("bot")
        print("\n" + "="*40)
        get_deployment_logs("admin-panel")
        return True
    else:
        print("üîê –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...")
        if login_railway():
            return monitor_with_cli()
        else:
            return False

def show_manual_commands():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ä—É—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    print("""
üõ†Ô∏è –†—É—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Railway:

1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Railway CLI:
   npm install -g @railway/cli

2. –í—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç:
   railway login

3. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø—Ä–æ–µ–∫—Ç—É:
   railway link <project-id>
   
4. –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç—É—Å–∞:
   railway status

5. –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:
   railway logs
   railway logs --service bot
   railway logs --service admin-panel

6. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏:
   railway logs --follow

7. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–∞—Ö:
   railway service list

üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: https://railway.app/project/6a08cc81-8944-4807-ab6f-79b06a7840df
""")

def main():
    import argparse
    
    parser = argparse.ArgumentParser(description="Quick Railway monitoring")
    parser.add_argument("--manual", action="store_true", help="Show manual commands")
    parser.add_argument("--logs", help="Get logs for specific service")
    
    args = parser.parse_args()
    
    if args.manual:
        show_manual_commands()
    elif args.logs:
        get_deployment_logs(args.logs)
    else:
        success = monitor_with_cli()
        if not success:
            print("\nüí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --manual –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä—É—á–Ω—ã—Ö –∫–æ–º–∞–Ω–¥")
            show_manual_commands()

if __name__ == "__main__":
    main()