#!/usr/bin/env python3
"""
–°–∏–º—É–ª—è—Ü–∏—è webhook –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
"""

import asyncio
import json
import sys
import os

sys.path.append('.')

async def simulate_message():
    """–°–∏–º—É–ª–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ –≤ webhook"""
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É webhook update
    mock_update = {
        "message": {
            "message_id": 123,
            "from": {
                "id": 123456789,
                "first_name": "–¢–µ—Å—Ç",
                "last_name": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
                "username": "test_user"
            },
            "chat": {
                "id": 123456789,
                "type": "private"
            },
            "text": "–ü—Ä–∏–≤–µ—Ç! –ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ–º —Ñ—É—Ç–±–æ–ª–æ–∫"
        }
    }
    
    print("üß™ –°–ò–ú–£–õ–Ø–¶–ò–Ø –û–ë–†–ê–ë–û–¢–ö–ò –°–û–û–ë–©–ï–ù–ò–Ø")
    print("="*50)
    
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–≥–µ–Ω—Ç
        from bot.agent import agent
        print("‚úÖ Agent –∑–∞–≥—Ä—É–∂–µ–Ω")
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –≤ webhook
        msg = mock_update["message"]
        chat_id = msg["chat"]["id"]
        text = msg.get("text", "")
        user_id = msg.get("from", {}).get("id", "unknown")
        user_name = msg.get("from", {}).get("first_name", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        
        print(f"üì® –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_name} (ID: {user_id}): {text}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É
        session_id = f"user_{user_id}"
        print(f"üîó Session ID: {session_id}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if agent.zep_client:
            print("üü¢ Zep –∫–ª–∏–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–µ–Ω, —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
            await agent.ensure_user_exists(f"user_{user_id}", {
                'first_name': user_name,
                'email': f'{user_id}@telegram.user'
            })
            await agent.ensure_session_exists(session_id, f"user_{user_id}")
        else:
            print("üü° Zep –∫–ª–∏–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –ø–∞–º—è—Ç—å")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        print("ü§ñ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç...")
        response = await agent.generate_response(text, session_id, user_name)
        
        print(f"‚úÖ –û—Ç–≤–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω:")
        print(f"   {response[:200]}...")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {type(e).__name__}: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = asyncio.run(simulate_message())
    if success:
        print("\n‚úÖ –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å!")
        sys.exit(1)