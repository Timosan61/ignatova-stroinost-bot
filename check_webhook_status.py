#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ webhook —á–µ—Ä–µ–∑ Telegram API
"""
import os
import requests
import json

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∏–∑ —Ñ–∞–π–ª–∞ .env
token = os.getenv('TELEGRAM_BOT_TOKEN')
if not token:
    try:
        with open('.env', 'r') as f:
            for line in f:
                if line.startswith('TELEGRAM_BOT_TOKEN='):
                    token = line.split('=', 1)[1].strip().strip('"')
                    break
    except:
        pass

if not token:
    print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
    print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª")
    exit(1)

print(f"üîë –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω: {token[:20]}...")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook
url = f'https://api.telegram.org/bot{token}/getWebhookInfo'

try:
    print(f"üîç –ó–∞–ø—Ä–æ—Å –∫: {url}")
    response = requests.get(url, timeout=10)
    data = response.json()
    
    if data.get('ok'):
        webhook_info = data.get('result', {})
        print("\nüìç –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û WEBHOOK:")
        print(f"   URL: {webhook_info.get('url', '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
        print(f"   Pending updates: {webhook_info.get('pending_update_count', 0)}")
        print(f"   Max connections: {webhook_info.get('max_connections', 40)}")
        print(f"   Allowed updates: {webhook_info.get('allowed_updates', '–í—Å–µ')}")
        print(f"   Has custom certificate: {webhook_info.get('has_custom_certificate', False)}")
        print(f"   IP address: {webhook_info.get('ip_address', 'N/A')}")
        
        last_error = webhook_info.get('last_error_message')
        if last_error:
            print(f"   ‚ö†Ô∏è –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: {last_error}")
            print(f"   üïê –í—Ä–µ–º—è –æ—à–∏–±–∫–∏: {webhook_info.get('last_error_date', 'N/A')}")
        else:
            print("   ‚úÖ –û—à–∏–±–æ–∫ –Ω–µ—Ç")
            
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º—É
        webhook_url = webhook_info.get('url', '')
        if not webhook_url:
            print("\n‚ùå –ü–†–û–ë–õ–ï–ú–ê: Webhook URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
            print("   –†–µ—à–µ–Ω–∏–µ: –ù—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook URL")
        else:
            print(f"\n‚úÖ Webhook URL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º allowed_updates
            allowed = webhook_info.get('allowed_updates', [])
            if allowed:
                has_business = any('business' in update for update in allowed)
                has_message = 'message' in allowed
                
                print(f"\nüìã –†–ê–ó–†–ï–®–ï–ù–ù–´–ï –°–û–ë–´–¢–ò–Ø:")
                for update in allowed:
                    print(f"   - {update}")
                    
                if has_business and not has_message:
                    print("\n‚ö†Ô∏è –í–û–ó–ú–û–ñ–ù–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è Business API")
                    print("   –ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç Business –∞–∫–∫–∞—É–Ω—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ 'message' –≤ allowed_updates")
                elif has_message:
                    print("\n‚úÖ –û–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω—ã")
                    
        pending = webhook_info.get('pending_update_count', 0)
        if pending > 0:
            print(f"\n‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: {pending} –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –≤ –æ—á–µ—Ä–µ–¥–∏")
            print("   –í–æ–∑–º–æ–∂–Ω–æ, webhook –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –∏–ª–∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ")
            
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ API: {data}")
        
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

print("\n" + "="*50)
print("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
print("1. –ï—Å–ª–∏ –Ω–µ—Ç Business –∞–∫–∫–∞—É–Ω—Ç–∞ - –≤–∫–ª—é—á–∏—Ç–µ –æ–±—ã—á–Ω—ã–µ 'message' —Å–æ–±—ã—Ç–∏—è")
print("2. –ï—Å–ª–∏ –µ—Å—Ç—å pending updates - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ webhook –æ—Ç–≤–µ—á–∞–µ—Ç 200 OK") 
print("3. –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å URL –∏ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç")