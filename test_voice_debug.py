#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
"""

import asyncio
import sys
import os
sys.path.append('.')

async def test_voice_debug():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –≥–æ–ª–æ—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    
    try:
        from bot.agent import agent
        
        print("=== –¢–ï–°–¢ –†–ê–ó–õ–ò–ß–ù–´–• –§–û–†–ú–ê–¢–û–í –ì–û–õ–û–°–û–í–´–• –î–ê–ù–ù–´–• ===")
        
        # –¢–µ—Å—Ç 1: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        test_voice_1 = {
            'file_id': 'AwACAgIAAxkBAAICumY1234567890abcdefghijklmnop',
            'file_unique_id': 'AgADCgAB1234567890',
            'duration': 3,
            'file_size': 12345
        }
        
        # –¢–µ—Å—Ç 2: –ê—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
        test_voice_2 = {
            'audio': {
                'file_id': 'CQACAgIAAxkBAAICumY1234567890abcdefghijklmnop',
                'file_unique_id': 'AgADCgAB1234567890',
                'duration': 5,
                'file_size': 23456
            }
        }
        
        # –¢–µ—Å—Ç 3: –î–æ–∫—É–º–µ–Ω—Ç —Å –∞—É–¥–∏–æ
        test_voice_3 = {
            'file_id': 'BQACAgIAAxkBAAICumY1234567890abcdefghijklmnop',
            'file_unique_id': 'AgADCgAB1234567890',
            'file_name': 'voice_message.ogg',
            'mime_type': 'audio/ogg',
            'file_size': 34567
        }
        
        test_cases = [
            ("–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ", test_voice_1),
            ("–ê—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏–µ", test_voice_2),
            ("–ê—É–¥–∏–æ –¥–æ–∫—É–º–µ–Ω—Ç", test_voice_3)
        ]
        
        for test_name, test_data in test_cases:
            print(f"\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º: {test_name}")
            print(f"üìã –î–∞–Ω–Ω—ã–µ: {test_data}")
            
            try:
                # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ file_id –∏ –±–∞–∑–æ–≤—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é
                from bot.voice.voice_service import VoiceService
                
                # –¢–µ–ø–µ—Ä—å voice_service –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ webhook
                print("  ‚ÑπÔ∏è –ì–æ–ª–æ—Å–æ–≤–æ–π —Å–µ—Ä–≤–∏—Å —Ç–µ–ø–µ—Ä—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ webhook.py, –∞ –Ω–µ –≤ agent")
                try:
                    import webhook
                    vs = webhook.voice_service
                except:
                    vs = None
                    
                if vs:
                    # –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ process_voice_message
                    file_id = test_data.get('file_id')
                    if not file_id:
                        file_id = test_data.get('file_id') or test_data.get('audio', {}).get('file_id')
                    
                    duration = test_data.get('duration', 0)
                    if not duration and test_data.get('audio'):
                        duration = test_data.get('audio', {}).get('duration', 0)
                    
                    file_size = test_data.get('file_size', 0)
                    if not file_size and test_data.get('audio'):
                        file_size = test_data.get('audio', {}).get('file_size', 0)
                    
                    print(f"  üîë file_id: {file_id}")
                    print(f"  üïê duration: {duration}—Å")
                    print(f"  üìä file_size: {file_size} bytes")
                    
                    if file_id:
                        print(f"  ‚úÖ file_id –∏–∑–≤–ª–µ—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                    else:
                        print(f"  ‚ùå file_id –Ω–µ –Ω–∞–π–¥–µ–Ω")
                        
                else:
                    print("  ‚ùå –ì–æ–ª–æ—Å–æ–≤–æ–π —Å–µ—Ä–≤–∏—Å –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
                    
            except Exception as e:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        
        print("\n=== –û–ë–©–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ï–†–í–ò–°–ï ===")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º voice_service –∏–∑ webhook
        try:
            import webhook
            voice_service = webhook.voice_service
            
            if voice_service:
                service_info = voice_service.get_service_info()
                test_results = await voice_service.test_service()
                
                print(f"‚úÖ Voice service –Ω–∞–π–¥–µ–Ω –≤ webhook")
                print(f"–°–µ—Ä–≤–∏—Å –≥–æ—Ç–æ–≤: {test_results.get('service_ready', False)}")
                print(f"Whisper –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: {test_results.get('whisper_connection', False)}")
                print(f"–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: {service_info.get('supported_formats', [])}")
            else:
                print("‚ùå –ì–æ–ª–æ—Å–æ–≤–æ–π —Å–µ—Ä–≤–∏—Å –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ webhook")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook voice service: {e}")
            print("‚ùå –ì–æ–ª–æ—Å–æ–≤–æ–π —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
                        
    except Exception as e:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_voice_debug())