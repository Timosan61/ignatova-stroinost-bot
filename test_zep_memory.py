#!/usr/bin/env python3
"""
üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Zep Memory
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –ø–∞–º—è—Ç–∏ –¥–∏–∞–ª–æ–≥–æ–≤
"""

import asyncio
import os
from dotenv import load_dotenv
from zep_cloud.client import AsyncZep
from zep_cloud.types import Message

load_dotenv()

ZEP_API_KEY = os.getenv('ZEP_API_KEY')

print("=" * 60)
print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï ZEP MEMORY")
print("=" * 60)

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–ª—é—á–∞
print("\n1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê API –ö–õ–Æ–ß–ê:")
if not ZEP_API_KEY:
    print("‚ùå ZEP_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    print("üí° –î–æ–±–∞–≤—å—Ç–µ –≤ .env –∏–ª–∏ Railway: ZEP_API_KEY=–≤–∞—à_–∫–ª—é—á")
    exit(1)
else:
    print(f"‚úÖ ZEP_API_KEY –Ω–∞–π–¥–µ–Ω (–¥–ª–∏–Ω–∞: {len(ZEP_API_KEY)} —Å–∏–º–≤–æ–ª–æ–≤)")
    print(f"üîë –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å: {ZEP_API_KEY[:8]}...")

# 2. –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
async def test_zep():
    print("\n2Ô∏è‚É£ –¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö ZEP:")
    
    try:
        client = AsyncZep(api_key=ZEP_API_KEY)
        print("‚úÖ –ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞: {e}")
        return
    
    # 3. –¢–µ—Å—Ç —Å–µ—Å—Å–∏–∏
    print("\n3Ô∏è‚É£ –¢–ï–°–¢ –†–ê–ë–û–¢–´ –° –°–ï–°–°–ò–ï–ô:")
    test_session_id = "test_session_12345"
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        messages = [
            Message(
                role="user",
                role_type="user",
                content="–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?"
            ),
            Message(
                role="assistant",
                role_type="assistant", 
                content="–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç Textile Pro, –ø–æ–º–æ–≥—É —Å –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ–º –æ–¥–µ–∂–¥—ã."
            )
        ]
        
        await client.memory.add(session_id=test_session_id, messages=messages)
        print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–µ—Å—Å–∏—é {test_session_id}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π: {type(e).__name__}: {e}")
        print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   - –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á")
        print("   - –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ Zep Cloud")
        print("   - –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤")
        return
    
    # 4. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏
    print("\n4Ô∏è‚É£ –ü–û–õ–£–ß–ï–ù–ò–ï –ü–ê–ú–Ø–¢–ò:")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–∞–º—è—Ç—å —Å–µ—Å—Å–∏–∏
        memory = await client.memory.get(session_id=test_session_id)
        print(f"‚úÖ –ü–∞–º—è—Ç—å –ø–æ–ª—É—á–µ–Ω–∞ –¥–ª—è —Å–µ—Å—Å–∏–∏ {test_session_id}")
        
        if memory.messages:
            print(f"üìù –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(memory.messages)}")
            for i, msg in enumerate(memory.messages[:3]):
                print(f"   {i+1}. {msg.role}: {msg.content[:50]}...")
        else:
            print("üìù –°–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
        if memory.context:
            print(f"üìÑ –ö–æ–Ω—Ç–µ–∫—Å—Ç: {memory.context[:100]}...")
        else:
            print("üìÑ –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø—É—Å—Ç")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞–º—è—Ç–∏: {type(e).__name__}: {e}")
    
    # 5. –ü–æ–∏—Å–∫ –≤ –ø–∞–º—è—Ç–∏
    print("\n5Ô∏è‚É£ –ü–û–ò–°–ö –í –ü–ê–ú–Ø–¢–ò:")
    
    try:
        # –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É
        search_results = await client.memory.search_sessions(
            text="–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ",
            limit=5
        )
        
        if search_results:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–µ—Å—Å–∏–π: {len(search_results)}")
            for result in search_results:
                print(f"   - Session: {result.session_id}, Score: {result.score}")
        else:
            print("üìù –°–µ—Å—Å–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {type(e).__name__}: {e}")
    
    print("\n" + "=" * 60)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("=" * 60)

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
if __name__ == "__main__":
    asyncio.run(test_zep())
    
    print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("1. –ï—Å–ª–∏ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ - Zep —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print("2. –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á –≤ Railway")
    print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–ª—é—á –∞–∫—Ç–∏–≤–µ–Ω –Ω–∞ https://app.getzep.com")