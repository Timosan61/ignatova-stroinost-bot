#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Business API —á–µ—Ä–µ–∑ webhook
–≠–º—É–ª–∏—Ä—É–µ—Ç business_message —Å –∏ –±–µ–∑ business_connection_id
"""

import requests
import json
import os
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
WEBHOOK_URL = "http://localhost:8000/webhook"  # –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
# WEBHOOK_URL = "https://bot-production-472c.up.railway.app/webhook"  # –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞

WEBHOOK_SECRET_TOKEN = os.getenv("WEBHOOK_SECRET_TOKEN", "textil_pro_secret_2025")

def send_business_message(text, business_connection_id=None, include_connection_id=True):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ business_message –Ω–∞ webhook"""
    
    # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É business_message —Å–æ–≥–ª–∞—Å–Ω–æ Telegram API
    update_data = {
        "update_id": 12345678,
        "business_message": {
            "message_id": 1001,
            "date": int(datetime.now().timestamp()),
            "chat": {
                "id": -100123456789,  # –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π ID –¥–ª—è –±–∏–∑–Ω–µ—Å-—á–∞—Ç–∞
                "type": "private"
            },
            "from": {
                "id": 987654321,
                "is_bot": False,
                "first_name": "–¢–µ—Å—Ç–æ–≤—ã–π –ö–ª–∏–µ–Ω—Ç",
                "username": "test_client"
            },
            "text": text
        }
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º business_connection_id –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if include_connection_id and business_connection_id:
        update_data["business_message"]["business_connection_id"] = business_connection_id
    
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å secret token
    headers = {
        "Content-Type": "application/json",
        "X-Telegram-Bot-Api-Secret-Token": WEBHOOK_SECRET_TOKEN
    }
    
    print(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ business_message:")
    print(f"   –¢–µ–∫—Å—Ç: {text}")
    print(f"   Connection ID: {business_connection_id if include_connection_id else '–ù–ï –í–ö–õ–Æ–ß–ï–ù'}")
    print(f"   URL: {WEBHOOK_URL}")
    
    try:
        response = requests.post(WEBHOOK_URL, json=update_data, headers=headers)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –û—Ç–≤–µ—Ç: {response.json()}")
        return response.json()
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

def test_business_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∫—É business connection"""
    
    update_data = {
        "update_id": 12345677,
        "business_connection": {
            "id": "biz_conn_test_123",
            "user": {
                "id": 111222333,
                "is_bot": False,
                "first_name": "–ë–∏–∑–Ω–µ—Å –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
            },
            "user_chat_id": 111222333,
            "date": int(datetime.now().timestamp()),
            "is_enabled": True
        }
    }
    
    headers = {
        "Content-Type": "application/json",
        "X-Telegram-Bot-Api-Secret-Token": WEBHOOK_SECRET_TOKEN
    }
    
    print(f"üîå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ business_connection...")
    try:
        response = requests.post(WEBHOOK_URL, json=update_data, headers=headers)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –û—Ç–≤–µ—Ç: {response.json()}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï BUSINESS API WEBHOOK")
    print("="*50)
    
    # –¢–µ—Å—Ç 1: Business connection
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç Business Connection:")
    test_business_connection()
    
    # –¢–µ—Å—Ç 2: Business message –° connection_id
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç Business Message —Å connection_id:")
    send_business_message(
        text="–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Business API",
        business_connection_id="biz_conn_test_123",
        include_connection_id=True
    )
    
    # –¢–µ—Å—Ç 3: Business message –ë–ï–ó connection_id (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ fallback)
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç Business Message –ë–ï–ó connection_id:")
    send_business_message(
        text="–¢–µ—Å—Ç –±–µ–∑ connection_id - –¥–æ–ª–∂–µ–Ω —Å—Ä–∞–±–æ—Ç–∞—Ç—å fallback",
        business_connection_id=None,
        include_connection_id=False
    )
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
    print("\n4Ô∏è‚É£ –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ (–æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ):")
    long_text = "–û—à–∏–±–∫–∞ " * 1000  # –°–æ–∑–¥–∞–µ–º –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    send_business_message(
        text=long_text[:4096],  # Telegram –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ
        business_connection_id="biz_conn_test_123",
        include_connection_id=True
    )
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ webhook —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.")