#!/usr/bin/env python3
"""
üîç –¢–µ—Å—Ç –ø–∞–º—è—Ç–∏ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º Zep —Ç–æ–∫–µ–Ω–æ–º —á–µ—Ä–µ–∑ webhook
"""

import requests
import json
import time
from datetime import datetime

BOT_URL = "https://ignatova-stroinost-bot-production.up.railway.app"
BOT_TOKEN = "7790878041:AAEsO0UNEfRFLZkGNApwNApNF9xJ-QFTjOo"

def test_bot_memory():
    print("=" * 60)
    print("üîç –¢–ï–°–¢ –ü–ê–ú–Ø–¢–ò –ë–û–¢–ê –í –ü–†–û–î–ê–ö–®–ï–ù–ï")
    print("=" * 60)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
    print("\n1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –ë–û–¢–ê:")
    try:
        response = requests.get(f"{BOT_URL}/", timeout=10)
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –ë–æ—Ç –æ–Ω–ª–∞–π–Ω: {data.get('status')}")
            print(f"üìã AI —Å—Ç–∞—Ç—É—Å: {data.get('ai_status')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ç–∞—Ç—É—Å–∞: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return
    
    # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ Telegram API
    print("\n2Ô∏è‚É£ –¢–ï–°–¢ –ß–ï–†–ï–ó TELEGRAM API:")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    test_user_id = 987654321
    test_session_id = f"user_{test_user_id}"
    
    # –°–∏–º—É–ª—è—Ü–∏—è webhook —Å–æ–æ–±—â–µ–Ω–∏—è
    test_message = {
        "update_id": 12345,
        "message": {
            "message_id": 1,
            "from": {
                "id": test_user_id,
                "is_bot": False,
                "first_name": "Test",
                "last_name": "User"
            },
            "chat": {
                "id": test_user_id,
                "first_name": "Test",
                "last_name": "User",
                "type": "private"
            },
            "date": int(time.time()),
            "text": "–ü—Ä–∏–≤–µ—Ç! –•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å 50 —Ä—É–±–∞—à–µ–∫ –∏–∑ —Ö–ª–æ–ø–∫–∞ –¥–ª—è –æ—Ñ–∏—Å–∞"
        }
    }
    
    try:
        print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
        response = requests.post(
            f"{BOT_URL}/webhook",
            json=test_message,
            headers={'Content-Type': 'application/json'},
            timeout=15
        )
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {result}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
    
    # 3. –ñ–¥–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –æ –ø–∞–º—è—Ç–∏
    print("\n3Ô∏è‚É£ –¢–ï–°–¢ –ü–ê–ú–Ø–¢–ò - –í–û–ü–†–û–° –û –ü–†–ï–î–´–î–£–©–ï–ú –†–ê–ó–ì–û–í–û–†–ï:")
    
    time.sleep(3)  # –ñ–¥–µ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    
    memory_test_message = {
        "update_id": 12346,
        "message": {
            "message_id": 2,
            "from": {
                "id": test_user_id,
                "is_bot": False,
                "first_name": "Test",
                "last_name": "User"
            },
            "chat": {
                "id": test_user_id,
                "first_name": "Test",
                "last_name": "User",
                "type": "private"
            },
            "date": int(time.time()),
            "text": "–û —á–µ–º –º—ã –≥–æ–≤–æ—Ä–∏–ª–∏ —Ç–æ–ª—å–∫–æ —á—Ç–æ? –ù–∞–ø–æ–º–Ω–∏ –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞"
        }
    }
    
    try:
        print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –æ –ø–∞–º—è—Ç–∏...")
        response = requests.post(
            f"{BOT_URL}/webhook",
            json=memory_test_message,
            headers={'Content-Type': 'application/json'},
            timeout=15
        )
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ –í–æ–ø—Ä–æ—Å –æ –ø–∞–º—è—Ç–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω: {result}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–ø–æ–º–∏–Ω–∞–µ—Ç –ª–∏ –±–æ—Ç –¥–µ—Ç–∞–ª–∏ –∏–∑ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            if "processed" in str(result).lower():
                print("üí° –ë–æ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–≤–µ—Ç –≤ Telegram")
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–ø—Ä–æ—Å–∞ –æ –ø–∞–º—è—Ç–∏: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–æ–ø—Ä–æ—Å–∞ –æ –ø–∞–º—è—Ç–∏: {e}")
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ Telegram API —á—Ç–æ –±–æ—Ç –æ—Ç–≤–µ—Ç–∏–ª
    print("\n4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –û–¢–í–ï–¢–û–í –ß–ï–†–ï–ó TELEGRAM API:")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ getUpdates
        telegram_url = f"https://api.telegram.org/bot{BOT_TOKEN}/getUpdates"
        response = requests.get(telegram_url, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            if data.get("ok") and data.get("result"):
                print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {len(data['result'])}")
                
                # –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞
                bot_messages = []
                for update in data["result"][-10:]:  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
                    if "message" in update:
                        msg = update["message"]
                        if msg.get("from", {}).get("is_bot"):
                            bot_messages.append(msg.get("text", ""))
                
                if bot_messages:
                    print(f"üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–≤–µ—Ç—ã –±–æ—Ç–∞:")
                    for i, msg in enumerate(bot_messages[-3:], 1):  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3
                        print(f"   {i}. {msg[:100]}...")
                        
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–º—è—Ç—å
                    memory_keywords = ["—Ä—É–±–∞—à–µ–∫", "—Ö–ª–æ–ø–æ–∫", "–æ—Ñ–∏—Å", "50", "–∑–∞–∫–∞–∑"]
                    last_response = " ".join(bot_messages[-2:]).lower()  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 2 –æ—Ç–≤–µ—Ç–∞
                    
                    found_keywords = [kw for kw in memory_keywords if kw.lower() in last_response]
                    
                    print(f"\nüß† –ê–ù–ê–õ–ò–ó –ü–ê–ú–Ø–¢–ò:")
                    print(f"   –ù–∞–π–¥–µ–Ω–æ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤: {len(found_keywords)}/{len(memory_keywords)}")
                    print(f"   –ù–∞–π–¥–µ–Ω—ã: {found_keywords}")
                    
                    if len(found_keywords) >= 2:
                        print("‚úÖ –ü–ê–ú–Ø–¢–¨ –†–ê–ë–û–¢–ê–ï–¢ - –±–æ—Ç –ø–æ–º–Ω–∏—Ç –¥–µ—Ç–∞–ª–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞!")
                    else:
                        print("‚ö†Ô∏è –ü–ê–ú–Ø–¢–¨ –†–ê–ë–û–¢–ê–ï–¢ –ß–ê–°–¢–ò–ß–ù–û - –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–µ—Ç–∞–ª–∏ –ø–æ—Ç–µ—Ä—è–Ω—ã")
                else:
                    print("‚ùå –û—Ç–≤–µ—Ç—ã –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            else:
                print(f"‚ùå Telegram API –æ—à–∏–±–∫–∞: {data}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ Telegram API: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram API: {e}")
    
    print("\n" + "=" * 60)
    print("üîç –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")
    print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∞–∫–∂–µ –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º @ignatova_stroinost_bot –≤ Telegram")
    print("=" * 60)

if __name__ == "__main__":
    test_bot_memory()