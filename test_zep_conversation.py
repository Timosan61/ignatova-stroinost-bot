#!/usr/bin/env python3
"""
üß† –¢–µ—Å—Ç –ø–∞–º—è—Ç–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É –ø–∞–º—è—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –¥–∏–∞–ª–æ–≥–∞ "—á—Ç–æ –º—ã –æ–±—Å—É–∂–¥–∞–ª–∏ –≤—á–µ—Ä–∞"
"""

import asyncio
import os
from datetime import datetime, timedelta
from dotenv import load_dotenv
from zep_cloud.client import AsyncZep
from zep_cloud.types import Message

load_dotenv()

ZEP_API_KEY = os.getenv('ZEP_API_KEY')

async def test_conversation_memory():
    print("=" * 60)
    print("üß† –¢–ï–°–¢ –ü–ê–ú–Ø–¢–ò –†–ê–ó–ì–û–í–û–†–ê –° –í–†–ï–ú–ï–ù–ù–´–ú–ò –°–°–´–õ–ö–ê–ú–ò")
    print("=" * 60)
    
    client = AsyncZep(api_key=ZEP_API_KEY)
    test_session_id = "conversation_test_12345"
    
    # 1. –°–æ–∑–¥–∞–µ–º "–≤—á–µ—Ä–∞—à–Ω–∏–π" —Ä–∞–∑–≥–æ–≤–æ—Ä
    print("\n1Ô∏è‚É£ –°–ò–ú–£–õ–Ø–¶–ò–Ø –í–ß–ï–†–ê–®–ù–ï–ì–û –†–ê–ó–ì–û–í–û–†–ê:")
    yesterday_messages = [
        Message(
            role="–ê–Ω–Ω–∞",
            role_type="user",
            content="–ü—Ä–∏–≤–µ—Ç! –•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å –ø–æ—à–∏–≤ 100 —Ä—É–±–∞—à–µ–∫ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"
        ),
        Message(
            role="–ê–Ω–∞—Å—Ç–∞—Å–∏—è",
            role_type="assistant",
            content="–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –ê–Ω–Ω–∞! –û—Ç–ª–∏—á–Ω–æ, –ø–æ–º–æ–≥—É —Å –∑–∞–∫–∞–∑–æ–º —Ä—É–±–∞—à–µ–∫. –ö–∞–∫—É—é —Ç–∫–∞–Ω—å –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ - —Ö–ª–æ–ø–æ–∫ –∏–ª–∏ —Å–º–µ—Å–æ–≤—É—é?"
        ),
        Message(
            role="–ê–Ω–Ω–∞",
            role_type="user",
            content="–•–ª–æ–ø–æ–∫ 100%, –±–µ–ª—ã–µ —Ä—É–±–∞—à–∫–∏ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º –∫–æ–º–ø–∞–Ω–∏–∏"
        ),
        Message(
            role="–ê–Ω–∞—Å—Ç–∞—Å–∏—è",
            role_type="assistant",
            content="–ü–æ–Ω—è—Ç–Ω–æ! –•–ª–æ–ø–æ–∫ 100%, –±–µ–ª—ã–µ, —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º. –†–∞–∑–º–µ—Ä–Ω–∞—è —Å–µ—Ç–∫–∞ –Ω—É–∂–Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è? –ò –∫–æ–≥–¥–∞ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑?"
        ),
        Message(
            role="–ê–Ω–Ω–∞",
            role_type="user",
            content="–î–∞, —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã S-XXL. –ù—É–∂–Ω–æ –∫ –∫–æ–Ω—Ü—É –º–µ—Å—è—Ü–∞"
        ),
        Message(
            role="–ê–Ω–∞—Å—Ç–∞—Å–∏—è",
            role_type="assistant",
            content="–û—Ç–ª–∏—á–Ω–æ! –ó–∞–∫–∞–∑ –Ω–∞ 100 —Ä—É–±–∞—à–µ–∫ —Ö–ª–æ–ø–æ–∫ 100%, –±–µ–ª—ã–µ, —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º, —Ä–∞–∑–º–µ—Ä—ã S-XXL, —Å—Ä–æ–∫ - –∫–æ–Ω–µ—Ü –º–µ—Å—è—Ü–∞. –°—Ç–æ–∏–º–æ—Å—Ç—å –±—É–¥–µ—Ç 15000 —Ä—É–±–ª–µ–π. –ü–æ–¥—Ö–æ–¥–∏—Ç?"
        )
    ]
    
    try:
        await client.memory.add(session_id=test_session_id, messages=yesterday_messages)
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω '–≤—á–µ—Ä–∞—à–Ω–∏–π' —Ä–∞–∑–≥–æ–≤–æ—Ä ({len(yesterday_messages)} —Å–æ–æ–±—â–µ–Ω–∏–π)")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")
        return
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–º—è—Ç—å
    print("\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –°–û–•–†–ê–ù–ï–ù–ù–û–ô –ü–ê–ú–Ø–¢–ò:")
    try:
        memory = await client.memory.get(session_id=test_session_id)
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–∞ –ø–∞–º—è—Ç—å —Å–µ—Å—Å–∏–∏ {test_session_id}")
        print(f"üìù –°–æ–æ–±—â–µ–Ω–∏–π –≤ –ø–∞–º—è—Ç–∏: {len(memory.messages) if memory.messages else 0}")
        
        if memory.context:
            print(f"üìÑ –ê–≤—Ç–æ–∫–æ–Ω—Ç–µ–∫—Å—Ç Zep: {memory.context[:200]}...")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        if memory.messages:
            print("\nüìã –ü–û–°–õ–ï–î–ù–ò–ï –°–û–û–ë–©–ï–ù–ò–Ø:")
            for i, msg in enumerate(memory.messages[-4:]):
                print(f"   {i+1}. {msg.role}: {msg.content[:70]}...")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞–º—è—Ç–∏: {e}")
        return
    
    # 3. –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –≤–æ–ø—Ä–æ—Å
    print("\n3Ô∏è‚É£ –°–ò–ú–£–õ–Ø–¶–ò–Ø –°–ï–ì–û–î–ù–Ø–®–ù–ï–ì–û –í–û–ü–†–û–°–ê:")
    
    today_messages = [
        Message(
            role="–ê–Ω–Ω–∞",
            role_type="user",
            content="–ü—Ä–∏–≤–µ—Ç! –û —á–µ–º –º—ã —Å —Ç–æ–±–æ–π –≥–æ–≤–æ—Ä–∏–ª–∏ –≤—á–µ—Ä–∞? –ù–∞–ø–æ–º–Ω–∏ –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞"
        )
    ]
    
    try:
        await client.memory.add(session_id=test_session_id, messages=today_messages)
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –≤–æ–ø—Ä–æ—Å '–æ —á–µ–º –≥–æ–≤–æ—Ä–∏–ª–∏ –≤—á–µ—Ä–∞'")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return
    
    # 4. –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—É—é –ø–∞–º—è—Ç—å –¥–ª—è –æ—Ç–≤–µ—Ç–∞
    print("\n4Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ü–ê–ú–Ø–¢–ò –î–õ–Ø –û–¢–í–ï–¢–ê:")
    try:
        memory = await client.memory.get(session_id=test_session_id)
        
        print(f"üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(memory.messages) if memory.messages else 0}")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∫–∞–∫ –¥–µ–ª–∞–µ—Ç –±–æ—Ç
        context_parts = []
        
        if memory.context:
            context_parts.append(f"–ö–æ–Ω—Ç–µ–∫—Å—Ç Zep: {memory.context}")
        
        if memory.messages:
            recent_messages = memory.messages[-6:]  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 6 –∫–∞–∫ –≤ –±–æ—Ç–µ
            history = []
            for msg in recent_messages:
                role = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å" if msg.role_type == "user" else "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç"
                history.append(f"{role}: {msg.content}")
            context_parts.append("–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è:\n" + "\n".join(history))
        
        full_context = "\n\n".join(context_parts)
        
        print("\nüìù –ö–û–ù–¢–ï–ö–°–¢ –î–õ–Ø LLM:")
        print("-" * 40)
        print(full_context[:500] + "..." if len(full_context) > 500 else full_context)
        print("-" * 40)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–ª—é—á–µ–≤—ã–µ –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞
        key_details = {
            "—Ä—É–±–∞—à–∫–∏": "—Ä—É–±–∞—à–∫" in full_context.lower(),
            "100 —à—Ç—É–∫": "100" in full_context,
            "—Ö–ª–æ–ø–æ–∫": "—Ö–ª–æ–ø–æ–∫" in full_context.lower(),
            "–±–µ–ª—ã–µ": "–±–µ–ª" in full_context.lower(),
            "–ª–æ–≥–æ—Ç–∏–ø": "–ª–æ–≥–æ—Ç–∏–ø" in full_context.lower(),
            "15000 —Ä—É–±–ª–µ–π": "15000" in full_context,
            "–∫–æ–Ω–µ—Ü –º–µ—Å—è—Ü–∞": "–º–µ—Å—è—Ü" in full_context.lower()
        }
        
        print("\nüîç –ê–ù–ê–õ–ò–ó –ö–õ–Æ–ß–ï–í–´–• –î–ï–¢–ê–õ–ï–ô:")
        for detail, found in key_details.items():
            status = "‚úÖ" if found else "‚ùå"
            print(f"   {status} {detail}: {'–Ω–∞–π–¥–µ–Ω–æ' if found else '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'}")
        
        found_count = sum(key_details.values())
        total_count = len(key_details)
        print(f"\nüìà –ù–∞–π–¥–µ–Ω–æ –¥–µ—Ç–∞–ª–µ–π: {found_count}/{total_count} ({found_count/total_count*100:.1f}%)")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {e}")
    
    print("\n" + "=" * 60)
    print("üß† –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
    if found_count >= total_count * 0.7:  # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–æ 70%+ –¥–µ—Ç–∞–ª–µ–π
        print("‚úÖ –ü–∞–º—è—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç –û–¢–õ–ò–ß–ù–û - –≤—Å–µ –¥–µ—Ç–∞–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
        print("üí° –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –≤—á–µ—Ä–∞—à–Ω–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä–µ")
    elif found_count >= total_count * 0.5:
        print("‚ö†Ô∏è –ü–∞–º—è—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç –ß–ê–°–¢–ò–ß–ù–û - –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–µ—Ç–∞–ª–∏ –ø–æ—Ç–µ—Ä—è–Ω—ã")
        print("üí° –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞")
    else:
        print("‚ùå –ü–∞–º—è—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç –ü–õ–û–•–û - –º–Ω–æ–≥–æ –¥–µ—Ç–∞–ª–µ–π –ø–æ—Ç–µ—Ä—è–Ω–æ")
        print("üí° –ü—Ä–æ–±–ª–µ–º–∞ –≤ –ª–æ–≥–∏–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞–º—è—Ç–∏")
    print("=" * 60)

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
if __name__ == "__main__":
    asyncio.run(test_conversation_memory())