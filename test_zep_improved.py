#!/usr/bin/env python3
"""
üß™ –£–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç Zep Memory
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ä–∞–±–æ—Ç—É —Å –ø–∞–º—è—Ç—å—é —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
"""

import asyncio
import os
import sys
from datetime import datetime
import uuid

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –±–æ—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

try:
    from zep_cloud.client import AsyncZep
    from zep_cloud.types import Message
    print("‚úÖ Zep SDK —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ Zep SDK: {e}")
    print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install zep-cloud")
    sys.exit(1)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
try:
    from bot.config import ZEP_API_KEY
    print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ bot.config")
except ImportError:
    ZEP_API_KEY = os.getenv('ZEP_API_KEY')
    print("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º ZEP_API_KEY –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

async def test_zep_memory():
    """–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç Zep Memory"""
    
    print("\n" + "="*60)
    print("üß™ –£–õ–£–ß–®–ï–ù–ù–´–ô –¢–ï–°–¢ ZEP MEMORY")
    print("="*60)
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞
    print("\n1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê API –ö–õ–Æ–ß–ê:")
    if not ZEP_API_KEY:
        print("‚ùå ZEP_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ .env")
        return False
    
    print(f"‚úÖ API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω")
    print(f"   –î–ª–∏–Ω–∞: {len(ZEP_API_KEY)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"   –ü—Ä–µ—Ñ–∏–∫—Å: {ZEP_API_KEY[:8]}...")
    
    # 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
    print("\n2Ô∏è‚É£ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ö–õ–ò–ï–ù–¢–ê:")
    try:
        client = AsyncZep(api_key=ZEP_API_KEY)
        print("‚úÖ –ö–ª–∏–µ–Ω—Ç Zep —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞: {type(e).__name__}: {e}")
        return False
    
    # 3. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n3Ô∏è‚É£ –°–û–ó–î–ê–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:")
    test_user_id = f"test_user_{uuid.uuid4().hex[:8]}"
    
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_data = {
            "user_id": test_user_id,
            "email": f"{test_user_id}@test.com",
            "first_name": "Test",
            "last_name": "User",
            "metadata": {
                "created_at": datetime.now().isoformat(),
                "test": True
            }
        }
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await client.user.add(**user_data)
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {test_user_id}")
        
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {type(e).__name__}: {e}")
        print("   –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    
    # 4. –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏
    print("\n4Ô∏è‚É£ –°–û–ó–î–ê–ù–ò–ï –°–ï–°–°–ò–ò:")
    test_session_id = f"session_{uuid.uuid4().hex}"
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        session_data = {
            "session_id": test_session_id,
            "user_id": test_user_id,
            "metadata": {
                "channel": "telegram",
                "test": True
            }
        }
        
        await client.memory.add_session(**session_data)
        print(f"‚úÖ –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞: {test_session_id}")
        
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —è–≤–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Å–µ—Å—Å–∏—é: {type(e).__name__}: {e}")
        print("   –°–µ—Å—Å–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π")
    
    # 5. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    print("\n5Ô∏è‚É£ –î–û–ë–ê–í–õ–ï–ù–ò–ï –°–û–û–ë–©–ï–ù–ò–ô:")
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Ä–æ–ª—è–º–∏
        messages = [
            Message(
                role="Test User",  # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–º–µ—Å—Ç–æ "user"
                role_type="user",
                content="–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ú–µ–Ω—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ —Ñ—É—Ç–±–æ–ª–æ–∫ –≤ –ö–∏—Ç–∞–µ."
            ),
            Message(
                role="–ê–Ω–∞—Å—Ç–∞—Å–∏—è",  # –ò–º—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
                role_type="assistant",
                content="–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –†–∞–¥–∞ –ø–æ–º–æ—á—å –≤–∞–º —Å –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ–º —Ñ—É—Ç–±–æ–ª–æ–∫. –ö–∞–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?"
            ),
            Message(
                role="Test User",
                role_type="user",
                content="–ù—É–∂–Ω–æ 5000 —à—Ç—É–∫, —Ö–ª–æ–ø–æ–∫ 100%, —Å –Ω–∞—à–∏–º –ª–æ–≥–æ—Ç–∏–ø–æ–º."
            ),
            Message(
                role="–ê–Ω–∞—Å—Ç–∞—Å–∏—è",
                role_type="assistant",
                content="–û—Ç–ª–∏—á–Ω–æ! –î–ª—è 5000 —Ñ—É—Ç–±–æ–ª–æ–∫ –∏–∑ 100% —Ö–ª–æ–ø–∫–∞ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º:\n\nüìä –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: $3-5 –∑–∞ —à—Ç—É–∫—É\nüïê –°—Ä–æ–∫ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞: 20-25 –¥–Ω–µ–π\nüö¢ –î–æ—Å—Ç–∞–≤–∫–∞: 15-30 –¥–Ω–µ–π\n\n–ú–æ–≥—É –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ. –ö–∞–∫–∏–µ —Ä–∞–∑–º–µ—Ä—ã –Ω—É–∂–Ω—ã?"
            )
        ]
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ø–∞–º—è—Ç—å
        await client.memory.add(session_id=test_session_id, messages=messages)
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π")
        
        # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        await asyncio.sleep(1)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π: {type(e).__name__}: {e}")
        print(f"   –î–µ—Ç–∞–ª–∏: {str(e)}")
        return False
    
    # 6. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏
    print("\n6Ô∏è‚É£ –ü–û–õ–£–ß–ï–ù–ò–ï –ü–ê–ú–Ø–¢–ò:")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–∞–º—è—Ç—å —Å–µ—Å—Å–∏–∏
        memory = await client.memory.get(session_id=test_session_id)
        
        if hasattr(memory, 'messages') and memory.messages:
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(memory.messages)} —Å–æ–æ–±—â–µ–Ω–∏–π:")
            for i, msg in enumerate(memory.messages, 1):
                print(f"   {i}. [{msg.role_type}] {msg.role}: {msg.content[:60]}...")
        else:
            print("‚ùå –°–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–∞–º—è—Ç–∏")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        if hasattr(memory, 'context') and memory.context:
            print(f"\nüìÑ –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –∫–æ–Ω—Ç–µ–∫—Å—Ç (–¥–ª–∏–Ω–∞: {len(memory.context)} —Å–∏–º–≤–æ–ª–æ–≤):")
            print(f"   {memory.context[:200]}...")
        else:
            print("\nüìÑ –ö–æ–Ω—Ç–µ–∫—Å—Ç –µ—â–µ –Ω–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º summary
        if hasattr(memory, 'summary') and memory.summary:
            print(f"\nüìã –ï—Å—Ç—å summary: {memory.summary[:100]}...")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞–º—è—Ç–∏: {type(e).__name__}: {e}")
        return False
    
    # 7. –ü–æ–∏—Å–∫ –ø–æ –ø–∞–º—è—Ç–∏
    print("\n7Ô∏è‚É£ –ü–û–ò–°–ö –ü–û –ü–ê–ú–Ø–¢–ò:")
    
    try:
        # –ü–æ–∏—Å–∫ —Å–µ—Å—Å–∏–π –ø–æ —Ç–µ–∫—Å—Ç—É
        search_results = await client.memory.search_sessions(
            text="—Ñ—É—Ç–±–æ–ª–∫–∏ —Ö–ª–æ–ø–æ–∫",
            user_id=test_user_id,
            limit=5
        )
        
        if search_results:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(search_results)} —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–µ—Å—Å–∏–π")
            for result in search_results[:3]:
                print(f"   - Session: {result.session_id}")
                if hasattr(result, 'score'):
                    print(f"     Score: {result.score}")
        else:
            print("üìù –†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
    except AttributeError:
        print("‚ö†Ô∏è –ú–µ—Ç–æ–¥ search_sessions –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ SDK")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {type(e).__name__}: {e}")
    
    # 8. –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞–º—è—Ç–∏
    print("\n8Ô∏è‚É£ –û–ë–ù–û–í–õ–ï–ù–ò–ï –ü–ê–ú–Ø–¢–ò:")
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –µ—â–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        new_messages = [
            Message(
                role="Test User",
                role_type="user",
                content="–†–∞–∑–º–µ—Ä—ã –Ω—É–∂–Ω—ã S, M, L, XL –≤ —Ä–∞–≤–Ω—ã—Ö –ø—Ä–æ–ø–æ—Ä—Ü–∏—è—Ö."
            ),
            Message(
                role="–ê–Ω–∞—Å—Ç–∞—Å–∏—è",
                role_type="assistant",
                content="–ü–æ–Ω—è–ª! –†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ä–∞–∑–º–µ—Ä–∞–º S-XL. –ü–æ–¥–≥–æ—Ç–æ–≤–ª—é –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ."
            )
        ]
        
        await client.memory.add(session_id=test_session_id, messages=new_messages)
        print("‚úÖ –ü–∞–º—è—Ç—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –ø–∞–º—è—Ç—å
        updated_memory = await client.memory.get(session_id=test_session_id)
        if hasattr(updated_memory, 'messages'):
            print(f"   –¢–µ–ø–µ—Ä—å –≤ –ø–∞–º—è—Ç–∏: {len(updated_memory.messages)} —Å–æ–æ–±—â–µ–Ω–∏–π")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {type(e).__name__}: {e}")
    
    # 9. –ò—Ç–æ–≥–∏
    print("\n" + "="*60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print("="*60)
    
    print("\n‚úÖ –£—Å–ø–µ—à–Ω–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ:")
    print("   - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞")
    print("   - –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–µ—Å—Å–∏–∏")
    print("   - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∏–º–µ–Ω–∞–º–∏")
    print("   - –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏")
    print("   - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏")
    
    print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API –∫–ª—é—á –∞–∫—Ç–∏–≤–µ–Ω")
    print("2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ä–æ–ª—è—Ö")
    print("3. –°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Å–µ—Å—Å–∏–∏ —Å user_id –¥–ª—è –ª—É—á—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏")
    print("4. –†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ª–∏–º–∏—Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è")
    
    return True

async def cleanup_test_data():
    """–û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüßπ –û–ß–ò–°–¢–ö–ê –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–•:")
    # –í –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–µ—Å—Å–∏–π
    print("‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    success = asyncio.run(test_zep_memory())
    
    if success:
        asyncio.run(cleanup_test_data())
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")
        sys.exit(1)